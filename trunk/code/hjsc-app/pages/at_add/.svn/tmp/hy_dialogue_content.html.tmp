<!doctype html>
<html>

	<head>
		<meta charset="UTF-8">
		<title>聊天室</title>
		<meta name="viewport" content="width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no" />
		<link rel="stylesheet" href="../../css/mui.min.css" />
		<link rel="stylesheet" href="../../css/index.css" />
		<style>
			body {
				overflow-x: hidden;
			}
			
			.mui-bar-nav~.mui-content {
				padding-top: 50px;
				padding-bottom: 60px;
			}
			
			.sender {
				clear: both;
				/*margin-left: 15px;*/
				padding-left: 15px;
				width: 100%;
				margin-top: 2px;
				display: inline-block;
				box-sizing: border-box;
				position: relative;
			}
			
			.sender div:nth-of-type(1) {
				float: left
			}
			
			.sender div:nth-of-type(2) {
				background-color: #ffffff;
				float: left;
				margin: 17px 10px 10px 17px;
				padding: 4px 10px 10px 0;
				border-radius: 7px;
				max-width: 63%;
			}
			
			.receiver div:first-child img,
			.sender div:first-child img {
				width: 42px;
				height: 42px
			}
			
			.receiver {
				box-sizing: border-box;
				clear: both;
				padding-right: 15px;
				/*margin-right: 15px;*/
				margin-top: 2px;
				display: inline-block;
				width: 100%;
				position: relative;
			}
			
			.receiver div:nth-child(1) {
				float: right
			}
			
			.receiver div:nth-of-type(2) {
				float: right;
				background-color: #ffffff;
				margin: 17px 17px 10px 20px;
				padding: 4px 0 10px 10px;
				border-radius: 7px;
				max-width: 66%;
			}
			
			.left_triangle {
				height: 0;
				width: 0;
				border-width: 8px;
				border-style: solid;
				border-color: transparent #ffffff transparent transparent;
				position: relative;
				left: -16px;
				top: 9px
			}
			
			.right_triangle {
				height: 0;
				width: 0;
				border-width: 8px;
				border-style: solid;
				border-color: transparent transparent transparent #ffffff;
				position: relative;
				right: -16px;
				top: 9px
			}
			
			.head-img {
				border-radius: 10px;
			}
			
			.last-time {
				font-size: 12px;
				text-align: center;
				max-width: 40%;
				background-color: rgba(0, 0, 0, .1);
				margin: 20px auto;
				padding: 3px;
				color: #fff;
				letter-spacing: 1px;
				border-radius: 3px;
			}
			
			.left-right {
				display: block;
				padding-top: 8px;
				font-size: 16px;
				color: #333333;
				text-align: justify;
				word-wrap: break-word;
				word-break: break-all;
				display: -webkit-box;
			}
			
			.mui-content {
				background-color: transparent;
			}
			
			.left {
				padding-left: 0px;
				margin-right: 5px;
			}
			
			.dialogue-other {
				width: 100%;
				position: fixed;
				bottom: 0;
				left: 0;
			}
			
			.right {
				padding-right: 0px;
				margin-left: 5px;
			}
			
			.footer {
				width: auto;
				border-top: 1px solid rgb(229, 229, 229);
				background: #F2F2F2;
				padding: 0.4rem 0.75rem;
				overflow: hidden;
			}
			
			.footer span {
				display: inline-block;
				width: 1.5rem;
				height: 1.5rem;
				background: #fff;
				border-radius: 50%;
				float: left;
			}
			
			.footer .entry {
				float: left;
				width: 9.7rem;
				/*width: 12rem;*/
				height: 1.65rem;
				float: left;
				margin-bottom: 0;
				margin-left: 0.15rem;
				border-radius: 16.5px;
				border: none;
			}
			
			.footer .smile {
				float: left;
				margin-left: 0.15rem;
				background: url('../../img/smile.png')no-repeat center;
				background-size: 1.5rem 1.5rem;
			}
			
			.footer .raise {
				float: left;
				background: url('../../icon/ztzw_3.png')no-repeat center;
				background-size: 1.5rem 1.5rem;
			}
			
			.footer .arrow {
				float: right;
				background: url('../../icon/ztzw_5.png')no-repeat center;
				background-size: 1.5rem 1.5rem;
			}
			
			.footer .import {
				overflow: hidden;
				box-sizing: border-box;
			}
			
			.classify {
				padding: 0.75rem;
				padding-bottom: 5px !important;
			}
			
			.classify .list {
				float: left;
			}
			
			.classify .list:nth-of-type(2) {
				margin: 0 2.2rem;
			}
			
			.classify .list:nth-of-type(3) {
				/*margin-right: 1.85rem*/
			}
			
			.classify .list>div {
				width: 2.85rem;
				height: 2.85rem;
				border-radius: 8px;
			}
			
			.use {
				margin-top: 5px;
				border-top: 1px solid rgb(229, 229, 229);
			}
			
			.classify .picture {
				background: url('../../icon/zt_b3.png')no-repeat center #fff;
				background-size: 22px 22px;
			}
			
			.classify .photo {
				background: url('../../icon/zt_b2.png')no-repeat center #fff;
				background-size: 22px 22px;
			}
			
			.classify .viewpoint {
				background: url('../../icon/zt_b5.png')no-repeat center #fff;
				background-size: 22px 22px;
			}
			
			.classify .document {
				background: url('../../icon/zt_b4.png')no-repeat center #fff;
				background-size: 22px 22px;
			}
			
			.classify .list p {
				font-size: 14px;
				color: rgb(153, 153, 153);
				text-align: center;
				margin-top: 5px;
			}
			
			.active {
				display: block !important;
			}
			
			.next {
				display: inline-block;
				position: absolute;
				right: 15px;
				top: 15px;
			}
			
			.next img {
				width: 18px;
				height: 20px;
			}
			
			.lchatname {
				position: absolute;
				top: -6px;
				left: 74px;
				width: 30%;
				text-align: left;
				color: #999;
			}
			
			.rchatname {
				position: absolute;
				top: -6px;
				right: 74px;
				width: 30%;
				text-align: right;
				color: #999;
			}
			
			#facebox td img {
				width: 28px !important;
			}
			
			#facebox {
				left: 4px !important;
				padding-top: 10px;
				position: relative !important;
				top: 10px !important;
			}
			
			th,
			td {
				height: none;
				line-height: none;
				text-align: none;
				width: none;
				border: none;
			}
		</style>
	</head>

	<body>

		<div class="wscontent">
			<header class="mui-bar mui-bar-nav">
				<a class="mui-action-back mui-icon mui-icon-left-nav mui-pull-left"></a>
				<h1 class="mui-title">会议室</h1>
				<span id="next" class="next"><img src="../../icon/gcyp_ss5.png"/></span>
			</header>

			<div class="mui-content" id="sctop">

				<div class="main-content">

					<div class="dialogue-content">

						<div class="last-time dnone">
							<!--昨天 14:27-->
							<!--头像-->
							<input type="text" v-model="limg" />
							<!--姓名-->
							<input type="text" v-model="lname" />
						</div>

						<!-- Left -->
						<div class="sender dnone">
							<div>
								<img class="head-img" src="">
							</div>
							<small class="lchatname hone">123</small>
							<div>
								<div class="left_triangle"></div>
								<span class="left-right left leftcontent">
								左边
							</span>
							</div>
						</div>

						<!-- Right -->
						<div class="receiver dnone">
							<div>
								<img class="head-img" src="">
							</div>
							<small class="rchatname hone">123</small>
							<div>
								<div class="right_triangle"></div>
								<span class="left-right right rightcontent">
								右边
								</span>
							</div>
						</div>

					</div>

				</div>

			</div>

			<!--footer-->
			<div class="dialogue-other">
				<div class="footer">
					<div class="import">
						<span class="raise"></span>
						<input id="saytext" class="entry" type="text" />
						<span class="smile emotion"></span>
						<span class="arrow ub_btn"></span>
					</div>
					<div style="clear: both;"></div>
					<div class="use footer3 dnone">
						<div class="classify">
							<div class="list" id="tab_picture">
								<div class="picture"></div>
								<p>图片</p>
							</div>
							<div class="list" id="tab_photo">
								<div class="photo"></div>
								<p>拍照</p>
							</div>
							<!--<div class="list" id="tab_viewpoint">
							<div class="viewpoint"></div>
							<p>视点</p>
						</div>-->
							<div class="list" id="tab_document">
								<div class="document"></div>
								<p>文档</p>
							</div>
							<div style="clear: both;"></div>
						</div>
					</div>
				</div>
			</div>
		</div>

		<script type="text/javascript" src="../../js/mui.min.js"></script>
		<script type="text/javascript" src="../../js/vue2.5.js"></script>
		<script type="text/javascript" src="../../js/jquery.min.js"></script>
		<script type="text/javascript" src="../../js/jquery.qqFace.js"></script>
		<script type="text/javascript" src="../../js/pub.js"></script>
		<script type="text/javascript" src="../../js/globalVariable.js"></script>
		<script type="text/javascript" src="../../js/test.js"></script>
		<script type="text/javascript">
			var vm = new Vue({
				el: '.wscontent',
				data: {
					//左侧图片
					limg: '',
					//左侧姓名
					lname: ''
				}

			})

			userInfo = getGlobalUserInfo();
			//会议id
			var meetingid = GetQueryString('id');
			//图片存放至map
			var IMGMAP = new Map();
			//获取私聊聊天记录
			//					function privatechat(){
			//						$.ajax({
			//							type: "get",
			//							url: userInfo.chaturl + "/message/singleHistory",
			//							async: true,
			//							beforeSend: function(request) {
			//								request.setRequestHeader('token', userInfo.tokenId);
			//							},
			//							data: {
			//								userId: userInfo.userId,
			//								toId:3,//对话人:wzq
			//								pageSize: 20, //页数
			//								pageNum: 1, //数量
			//								times: new Date().getTime()
			//							},
			//							success: function(data) {
			//								if(data.cd==0){
			//									console.log(JSON.stringify(data))
			//								}
			//
			//							}
			//						});
			//					}
			//匹配群组联系人
			//			function grounpman(uid){
			////				alert(uid)
			//				$.ajax({
			//					type: 'GET',
			//					url: userInfo.url + '/mobile/showUserList',
			//					beforeSend: function(request) {
			//						request.setRequestHeader('tokenID', userInfo.tokenId);
			//					},
			//					data: {
			//						'projId': userInfo.projId,
			//						'entId': userInfo.entid,
			//						'ugId': userInfo.groupId, //组群id需要先获取组群列表   4.1的接口中获取
			//						'pageNo': 1,
			//						'pageSize': 1000
			//					},
			//					async: true,
			//					success: function(data) {
			//						
			//						$.each(data.obj, function(e,e1) {
			//							if(e1.userId==uid){
			////							console.log(e1.userId+'----'+uid+'--'+e1.imgUuid);
			//								vm.limg=e1.imgUuid
			//								return e1.imgUuid;
			//							}
			//						});
			////						alert(a)
			//					}
			//				})
			//			}
			//滚动到底
			function scrollb() {
				var sctop = document.getElementById('sctop').scrollHeight;
				$(window).scrollTop(sctop);
			}
			//排序↑
			function sortarr(a, b) {
				return a - b;
			}
			//转换时间
			function chattime(date) {
				var dateee = new Date(date).toJSON();
				return new Date(+new Date(dateee) + 8 * 3600 * 1000).toISOString().replace(/T/g, ' ').replace(/\.[\d]{3}Z/, '')
			}
			//当前时间
			var mytime = new Date();
			var formatDateTime = function(date) {
				var y = date.getFullYear();
				var m = date.getMonth() + 1;
				m = m < 10 ? ('0' + m) : m;
				var d = date.getDate();
				d = d < 10 ? ('0' + d) : d;
				var h = date.getHours();
				var minute = date.getMinutes();
				minute = minute < 10 ? ('0' + minute) : minute;
				return y + '-' + m + '-' + d + ' ' + h + ':' + minute;
			};

			//获取用户
			function getuser(uid) {
				$.ajax({
					type: 'GET',
					url: userInfo.url + '/mobile/showUserInfo',
					beforeSend: function(request) {
						request.setRequestHeader('tokenID', userInfo.tokenId);
						request.setRequestHeader('appType', 7);
					},
					data: {
						'projId': userInfo.projId,
						'userId': uid
					},
					async: false,
					success: function(data) {
						vm.limg = data.obj.userImg;
						vm.lname = data.obj.realName;

					}
				})
			}

			//获取群聊
			var arr = [];

			function groupchat() {
				arr = [];
				$.ajax({
					type: "get",
					url: userInfo.chaturl + "/message/groupHistory",
					async: true,
					beforeSend: function(request) {
						request.setRequestHeader('token', userInfo.tokenId);
					},
					data: {
						//群聊id
						groupId: meetingid,
						pageSize: 5, //数据量
						pageNum: 1, //页数
						times: new Date().getTime()
					},
					success: function(data) {
						//						console.log(data)
						if(data.cd == 0) {
							$.each(data.rt, function(e, e1) {
								arr.unshift(e1);
							});
							//							console.log(arr)
							$.each(arr, function(e, e1) {
								//console.log('默认时间：'+chattime(e1.date))
								if(e1.fromid == userInfo.userId) {
									//右
									$('.dialogue-content').append(
										`
					<div class="last-time">
						${chattime(e1.date)}
					</div>
					
					<div class="receiver">
							<div>
								<img class="head-img" src="${userInfo.chathead}">
							</div>
							<small class="rchatname hone">${userInfo.realName}</small>
							<div>
								<div class="right_triangle"></div>
								<span class="left-right right rightcontent">
								${e1.content}
								</span>
							</div>
						</div>
					`
									)
								} else {
									//根据fromid获取姓名,头像
									getuser(e1.fromid);
									leftimg = vm.limg;
									leftname = vm.lname;
									//						},500)↑

									//左
									//									setTimeout(function() {
									$('.dialogue-content').append(
										`
					<div class="last-time">
						${chattime(e1.date)}
					</div>
					<div class="sender">
							<div>
								<img class="head-img" src="${leftimg}">
							</div>
							<small class="lchatname hone">${leftname}</small>
							<div>
								<div class="left_triangle"></div>
								<span class="left-right left leftcontent">
								${e1.content}
							</span>
							</div>
						</div>
					`
									)
									//									})
									//					},600)↑
								}

							});

						}

					}
				})
			}

			groupchat();
			//进入聊天
			var ws = null;
			//判断当前浏览器是否支持WebSocket
			if('ws' in window) {
				//正式
				var wsurl = "ws://42.159.154.173:16800/websocket";
				//测试
				//var wsurl = "ws://10.252.26.117:16800/websocket";
				ws = new WebSocket(wsurl);
				//				console.log(ws)
			} else {
				mui.toast('不支持websocket')
			}
			//连接发生错误的回调方法
			ws.onerror = function() {
				mui.toast('连接错误')
			};

			//          调用qq表情			
			$(function() {

				$('.emotion').qqFace({

					id: 'facebox',

					assign: 'saytext',

					path: '../../icon/' //表情存放的路径,
				});

			});

			//查看结果

			function replace_em(str) {

				str = str.replace(/\</g, '&lt;');

				str = str.replace(/\>/g, '&gt;');

				str = str.replace(/\n/g, '<br/>');

				str = str.replace(/\[em_([0-9]*)\]/g, '<img src="../../icon/$1.gif" border="0" />');

				return str;

			}

			//连接成功建立的回调方法
			//左侧头像
			var leftimg;
			//左侧姓名
			var leftname;
			//发送的消息
			var sends;
			//谁发的
			var suserid;
			ws.onopen = function(event) {
				var message = new Object();
				message.token = userInfo.tokenId;
				message.projId = userInfo.projId;
				message.type = "0";
				console.log(JSON.stringify(message));
				ws.send(JSON.stringify(message));
				//				mui.toast('建立成功');
				//alert(meetingid)
				//'sendm'+meetingid
				$('.arrow').on('tap', function() {
					var str = $("#saytext").val();
//                  $("#show").html(replace_em(str));
					if($('.entry').val() == '') return;
					//滚动到底
					scrollb();
					var message = new Object();
					message.value = $('.entry').val();
					message.token = userInfo.tokenId;
					message.type = 2;
					message.from = userInfo.userId;
					//					message.projId = userInfo.projId;
					//					message.to = '10672'//userInfo.userId
					message.meetingId = meetingid;
					var msg = JSON.stringify(message);
					//					console.log(msg)
					ws.send(msg);
					sends = message.value;
					//发送者userid
					suserid = message.from;
					//根据userid获取头像
					//发送后清空消息框
					$('.entry').val('');
					$('.dialogue-content').append(
						`
					<div class="last-time">
						${formatDateTime(mytime)}
					</div>
					<div class="receiver">
							<div>
								<img class="head-img" src="${userInfo.chathead}">
							</div>
							<small class="rchatname hone">${userInfo.realName}</small>
							<div>
								<div class="right_triangle"></div>
								<span class="left-right right rightcontent">
								${replace_em(sends)}
								
								</span>
							</div>
						</div>
					`
					)

				})

				//接收到消息的回调方法
				var smsg = '';
				var sfrom = '';
				var mid = '';
				ws.onmessage = function(event) {
					//发送人的meetingid
					mid = JSON.parse(event.data).meetingId;
					//来自谁发的
					sfrom = JSON.parse(event.data).from;
					//群组相同才接收消息
					if(mid == meetingid) {
						//alert(mid+'->'+meetingid)
						getuser(sfrom);
						//grounpman(sfrom);
						//						setTimeout(function() {
						leftimg = vm.limg;
						leftname = vm.lname;
						//						}, 500)
						console.log(JSON.stringify(event.data))
						//接收的消息
						smsg = JSON.parse(event.data).value;
						//						setTimeout(function() {
						$('.dialogue-content').append(
							`
					<div class="sender">
							<div>
								<img class="head-img" src="${leftimg}">
							</div>
							<small class="lchatname hone">${leftname}</small>
							<div>
								<div class="left_triangle"></div>
								<span class="left-right left leftcontent">
								${smsg}
							</span>
							</div>
						</div>
					`
						)
						//						}, 600)
						//当前用户和
					}
				}

			}

			//连接关闭的回调方法
			ws.onclose = function() {
				mui.toast("连接关闭");
			}

			//监听窗口关闭事件，当窗口关闭时，主动去关闭websocket连接，防止连接还没断开就关闭窗口，server端会抛异常。
			window.onbeforeunload = function() {
				ws.close();
			}

			//关闭连接
			function closeWebSocket() {
				ws.close();
				mui.toast('关闭连接')
			}

			// 从相册中选择图片 
			function galleryImg() {
				// 从相册中选择图片
				plus.gallery.pick(function(e) {
					//showAndUpload(e);
					for(var i in e.files) {
						var fileSrc = e.files[i];
						// 其他操作,比如预览展示
						//console.log(fileSrc + "===============")
//						showAndUpload(fileSrc);
//						alert(fileSrc)
					}
				}, function(e) {
					console.log("取消选择图片");
				}, {
					filter: "image",
					multiple: true,
					maximum: 5,
					system: true,
					onmaxed: function() {
						plus.nativeUI.alert('最多只能选择5张图片');
					}
				});
			}
			// 打开相机拍照
			function getpic() {
				var cameraObj = plus.camera.getCamera();
				cameraObj.captureImage(function(e) {
					plus.io.resolveLocalFileSystemURL(e, function(entry) {
						var src = entry.toLocalURL();
						showAndUpload(src);
					}, function(e) {
						console.log("读取拍照文件错误" + e.message)
					})
				}, function(s) {
					console.log("error" + s);
				}, {
					filname: "_doc/head.png"
				})
			}
			
			//map数组
			var subimgitems = [];
		IMGMAP.forEach(function (item, key, mapObj) {
			subimgitems.push(item);
        });
			
			
			//上传图片
			function sumfile(file) {

		//var returnUrl = 'http://10.252.26.240:8080/h2-bim-project/mobile/uploadFileTeam.json?ugId='+
		//userInfo.groupId +'&dirId=0&entId=' + userInfo.entid;

		var returnUrl = userInfo.url + '/mobile/uploadFileTeam.json?ugId=' +
			userInfo.groupId + '&dirId=0&entId=' + userInfo.entid;
		returnUrl = encodeURIComponent(returnUrl);

		var formdata = new FormData();
		formdata.append('projId', userInfo.projId);
		formdata.append('type', 1);
		formdata.append('userId', userInfo.userId);
		formdata.append('modelCode', '004');
		formdata.append('token', userInfo.tokenId);
		formdata.append('returnUrl', returnUrl);
		formdata.append('file', file);
              
              console.log("=========="+userInfo.fileUrl);
              
		$.ajax({
			type: "POST",
			//url: "http://10.252.26.240:8080/qjbim-file/uploading/uploadFileInfo",
			url: userInfo.fileUrl + "/message/uploadFile",
				//userInfo.chaturl
			async: true,
			//secureuri: false,
			data: formdata,
			dataType: "JSON",
			/**
			 *必须false才会自动加上正确的Content-Type
			 */
			contentType: false,
			/**
			 * 必须false才会避开jQuery对 formdata 的默认处理
			 * XMLHttpRequest会对 formdata 进行正确的处理
			 */
			processData: false,
			success: function(data, status) {
				
				console.log(JSON.stringify(data));
				console.log("上传图片status:", status);
				if(status == "success") {
//                 alert('上传成功');
					// getFileInfo();
					var AttachImageInfo = {
					fileUuid: data.attachImageInfo.fileUuid,
					fileName: data.attachImageInfo.fileName,
					fileExtension: data.attachImageInfo.fileExtension,
					fileSize: data.attachImageInfo.fileSize,
					fileMd5: data.attachImageInfo.fileMd5,
					relativePath: data.attachImageInfo.relativePath
				  }

				// 把图片对象放进map
				IMGMAP.set(IMGINDEX, AttachImageInfo);
					IMGINDEX++;
				
				}
				//返回的data 转换为AttachImageInfo
			},
			error: function(data, status, e) {
				console.log("上传图片报错data", data);
				console.log("上传图片报错status", status);
				console.log("上传图片报错e", e);
			}
		})

	}
			
			
			
			
			

			$('#tab_picture').on('tap', function() {
				galleryImg();
			})
			$('#tab_photo').on('tap', function() {
				getpic();
			})
			//			$('#tab_viewpoint').on('tap', function() {
			//				galleryImg();
			//			})

			//打开文档
			$('#tab_document').on('tap', function() {
				GoToURL('../at_team/select_document.html', 'select_document');
			})
			//选择人员
			//获取会议id
			var meetingid = getUrlParam('id');
			//获取会议names
			var meetingname = getUrlParam('mettingname');
			//设置标题
			$('.mui-title').text(meetingname);
			//0群组,1私聊,2会议
			var flag = getUrlParam('flag');
			$('#next').on('tap', function() {
				mui.openWindow({
					url: 'hy_chat_details.html?flag=2&addflag=0&id=' + meetingid + '&mettingname=' + meetingname,
					id: 'hy_chat_details'
				})
			})

			//输入框
			$('.entry').focus(function() {
				$('.footer3').addClass('dnone');
			})
			$('.raise').on('tap', function() {
				$('.footer3').removeClass('dnone active');
			})
			//发送时输入框状态
			//			$('.arrow').on('tap',function(){
			//				$('.footer3').addClass('dnone');
			//			})

			//			mui.back=function(){
			//				return false
			//			}
			mui.init({
				beforeback: function() {
					var list = plus.webview.currentWebview().opener();
					mui.fire(list, 'rlist');
					return true;
				},

				pullRefresh: {
					container: ".main-content", //下拉刷新容器标识，querySelector能定位的css选择器均可，比如：id、.class等
					down: {
						style: 'circle',
						color: '#2BD009',
						height: '30px',
						range: '50px',
						offset: '55px',
						auto: false,
						callback: drefresh
					}
				},
			});
			//有无数据
			var farr = 1;

			function drefresh() {
				setTimeout(function() {
					mui('.main-content').pullRefresh().endPulldownToRefresh((farr == 0));
					dchat();
					//					mui.toast('success');
				}, 1500);
			}

			var dnum = 1;
			var darr = [];

			function dchat() {
				dnum += 1;
				darr = [];
				$.ajax({
					type: "get",
					url: userInfo.chaturl + "/message/groupHistory",
					async: true,
					beforeSend: function(request) {
						request.setRequestHeader('token', userInfo.tokenId);
					},
					data: {
						//群聊id
						groupId: meetingid,
						pageSize: 5, //页数
						pageNum: dnum, //数量
						times: new Date().getTime()
					},
					success: function(data) {
						//						console.log(data)
						if(data.cd == 0) {
							if(data.rt == '') {
								farr = 0;
								mui.toast('没有更多数据了')
							}
							//							console.log(JSON.stringify(darr))
							$.each(data.rt, function(e, e1) {
								if(e1.fromid == userInfo.userId) {
									//右
									$('.dialogue-content').prepend(
										`
					<div class="last-time">
						${chattime(e1.date)}
					</div>
					
					<div class="receiver">
							<div>
								<img class="head-img" src="${userInfo.chathead}">
							</div>
							<small class="rchatname hone">${userInfo.realName}</small>
							<div>
								<div class="right_triangle"></div>
								<span class="left-right right rightcontent">
								${e1.content}
								</span>
							</div>
						</div>
					`
									)
								} else {
									//根据fromid获取姓名,头像
									getuser(e1.fromid);
									leftimg = vm.limg;
									leftname = vm.lname;
									//						},500)↑

									//左
									//									setTimeout(function() {
									$('.dialogue-content').prepend(
										`
					<div class="last-time">
						${chattime(e1.date)}
					</div>
					<div class="sender">
							<div>
								<img class="head-img" src="${leftimg}">
							</div>
							<small class="lchatname hone">${leftname}</small>
							<div>
								<div class="left_triangle"></div>
								<span class="left-right left leftcontent">
								${e1.content}
							</span>
							</div>
						</div>
					`
									)
									//									})
									//					},600)↑
								}

							});

						} else {
							mui.toast('没有更多数据了')
						}

					},
				})

			}
		</script>
	</body>

</html>